from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
import re
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


class OzonPrice:
    _SEARCHBOX = "div[data-widget='webPrice']"

    def __init__(self, driver):
        self.driver = driver

    def get_price(self) -> float:
        try:
            logger.info("üîç –ò—â—É —Ü–µ–Ω—É –Ω–∞ Ozon...")
            # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ 30 —Å–µ–∫—É–Ω–¥
            wait = WebDriverWait(self.driver, 30)
            
            logger.info("‚è≥ –û–∂–∏–¥–∞—é –∑–∞–≥—Ä—É–∑–∫—É —ç–ª–µ–º–µ–Ω—Ç–∞ —Ü–µ–Ω—ã...")
            
            element = wait.until(
                EC.presence_of_element_located((By.CSS_SELECTOR, self._SEARCHBOX))
            )
            
            price_text = element.text
            
            logger.info(f"üìù –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç —Ü–µ–Ω—ã: {price_text}")
            
            price = re.sub(r'[^\d]', '', price_text)
            result = float(price) if price else 0.0
            
            logger.info(f"üí∞ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞: {result}")

            return result
        except (TimeoutException, NoSuchElementException, ValueError) as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω—ã Ozon: {str(e)}")
            return 0.0


class WildberriesPrice:
    _PRICE_XPATH = "/html/body/div[1]/main/div[2]/div[2]/div[3]/div/div[3]/div[13]/div/div[1]/div[2]/div/div/div/p/span/ins"

    def __init__(self, driver):
        self.driver = driver

    def get_price(self) -> float:
        try:
            logger.info("üîç –ò—â—É —Ü–µ–Ω—É –Ω–∞ Wildberries...")
            # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ 30 —Å–µ–∫—É–Ω–¥
            wait = WebDriverWait(self.driver, 30)
            
            logger.info("‚è≥ –û–∂–∏–¥–∞—é –∑–∞–≥—Ä—É–∑–∫—É —ç–ª–µ–º–µ–Ω—Ç–∞ —Ü–µ–Ω—ã...")
            
            element = wait.until(
                EC.presence_of_element_located((By.XPATH, self._PRICE_XPATH))
            )
            
            price_text = element.text
            
            logger.info(f"üìù –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç —Ü–µ–Ω—ã: {price_text}")
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
            price = re.sub(r'[^\d]', '', price_text)
            result = float(price) if price else 0.0
            
            logger.info(f"üí∞ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞: {result}")
            
            return result
        except (TimeoutException, NoSuchElementException, ValueError) as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω—ã Wildberries: {str(e)}")
            return 0.0